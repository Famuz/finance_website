const fs=require("fs"),crypto=require("crypto"),util=require("util"),Repository=require("./repository"),scrypt=util.promisify(crypto.scrypt);export default class CommentsRepository extends Repository{async create(t){t.id=this.randomId();const r=crypto.randomBytes(8).toString("hex"),s=await scrypt(t.password,r,64),e=await this.getAll(),o={...t,password:`${s.toString("hex")}.${r}`};return e.push(o),await this.writeAll(e),o}async comparedPasswords(t,r){const[s,e]=t.split(".");return s===(await scrypt(r,e,64)).toString("hex")}}module.exports=new CommentsRepository("comments.json");
//# sourceMappingURL=comments.js.map
