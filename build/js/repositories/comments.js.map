{"version":3,"sources":["repositories/comments.js"],"names":["fs","require","crypto","util","Repository","scrypt","promisify","CommentsRepository","[object Object]","attrs","id","this","randomId","salt","randomBytes","toString","buf","password","records","getAll","record","push","writeAll","saved","supplied","hashed","split","module","exports"],"mappings":"AAAA,MAAMA,GAAKC,QAAQ,MACbC,OAASD,QAAQ,UACjBE,KAAOF,QAAQ,QACfG,WAAaH,QAAQ,gBAErBI,OAASF,KAAKG,UAAUJ,OAAOG,uBAEtB,MAAME,2BAA2BH,WAC9CI,aAAaC,GACXA,EAAMC,GAAKC,KAAKC,WAEhB,MAAMC,EAAOX,OAAOY,YAAY,GAAGC,SAAS,OACtCC,QAAYX,OAAOI,EAAMQ,SAAUJ,EAAM,IAEzCK,QAAgBP,KAAKQ,SACrBC,EAAS,IACVX,EACHQ,SAAU,GAAGD,EAAID,SAAS,UAAUF,KAMtC,OAJAK,EAAQG,KAAKD,SAEPT,KAAKW,SAASJ,GAEbE,EAGTZ,wBAAwBe,EAAOC,GAC7B,MAAQC,EAAQZ,GAASU,EAAMG,MAAM,KAGrC,OAAOD,WAFyBpB,OAAOmB,EAAUX,EAAM,KAEnBE,SAAS,QAIjDY,OAAOC,QAAU,IAAIrB,mBAAmB","file":"comments.js","sourcesContent":["const fs = require('fs');\nconst crypto = require('crypto');\nconst util = require('util');\nconst Repository = require('./repository');\n\nconst scrypt = util.promisify(crypto.scrypt);\n\nexport default class CommentsRepository extends Repository{\n  async create(attrs) {\n    attrs.id = this.randomId();\n\n    const salt = crypto.randomBytes(8).toString('hex');\n    const buf = await scrypt(attrs.password, salt, 64);\n\n    const records = await this.getAll();\n    const record = {\n      ...attrs,\n      password: `${buf.toString('hex')}.${salt}`\n    };\n    records.push(record);\n\n    await this.writeAll(records);\n\n    return record;\n  }\n\n  async comparedPasswords(saved, supplied) {\n    const [ hashed, salt ] = saved.split('.');\n    const hashedSuppliedBuf = await scrypt(supplied, salt, 64);\n\n    return hashed === hashedSuppliedBuf.toString('hex');\n  }\n}\n\nmodule.exports = new CommentsRepository('comments.json');"]}